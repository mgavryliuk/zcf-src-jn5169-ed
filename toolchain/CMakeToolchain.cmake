set(CMAKE_SYSTEM_NAME Generic)
set(STACK_SIZE 5000)
set(MINIMUM_HEAP_SIZE 2000)

if(WIN32)
    set(TOOL_EXECUTABLE_SUFFIX ".exe")
ELSE()
    set(TOOL_EXECUTABLE_SUFFIX "")
endif()

set(TOOLCHAIN_ABS_PATH ${CMAKE_SOURCE_DIR}/toolchain)
set(TOOLCHAIN_BIN_DIR ${TOOLCHAIN_ABS_PATH}/bin)
set(TOOLCHAIN_INC_DIR ${TOOLCHAIN_ABS_PATH}/include)
set(TOOLCHAIN_LIB_DIR ${TOOLCHAIN_ABS_PATH}/lib)

set(CMAKE_C_COMPILER ${TOOLCHAIN_BIN_DIR}/ba-elf-gcc${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "C compiler")
set(CMAKE_ASM_COMPILER ${TOOLCHAIN_BIN_DIR}/ba-elf-as${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "ASM compiler")
set(CMAKE_LINKER ${TOOLCHAIN_BIN_DIR}/ba-elf-ld${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "ld tool")
set(CMAKE_AR ${TOOLCHAIN_BIN_DIR}/ba-elf-ar${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "ar tool")
set(CMAKE_NM ${TOOLCHAIN_BIN_DIR}/ba-elf-nm${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "nm tool")
set(CMAKE_STRIP ${TOOLCHAIN_BIN_DIR}/ba-elf-strip${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "strip tool")
set(CMAKE_SIZE ${TOOLCHAIN_BIN_DIR}/ba-elf-size${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "size tool")
set(CMAKE_OBJCOPY ${TOOLCHAIN_BIN_DIR}/ba-elf-objcopy${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "objcopy tool")
set(CMAKE_OBJDUMP ${TOOLCHAIN_BIN_DIR}/ba-elf-objdump${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "objdump tool")
set(CMAKE_DEBUGER ${TOOLCHAIN_BIN_DIR}/ba-elf-gdb${TOOL_EXECUTABLE_SUFFIX} CACHE INTERNAL "debuger")

set(CMAKE_C_FLAGS_RELEASE "-Os" CACHE INTERNAL "c compiler flags release")
set(CMAKE_ASM_FLAGS_RELEASE "" CACHE INTERNAL "asm compiler flags release")
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "-Os" CACHE INTERNAL "linker flags release")

set(CMAKE_C_FLAGS "-march=ba2 -mcpu=jn51xx -mredzone-size=4 -mbranch-cost=3 -fomit-frame-pointer -fshort-enums -Wall -Wpacked -Wcast-align -fdata-sections -ffunction-sections" CACHE INTERNAL "c compiler flags")
set(CMAKE_ASM_FLAGS "-march=ba2 -mcpu=jn51xx -mredzone-size=4 -mbranch-cost=3 -fomit-frame-pointer -fshort-enums -Wall -Wpacked -Wcast-align -fdata-sections -ffunction-sections" CACHE INTERNAL "asm compiler flags")
set(CMAKE_EXE_LINKER_FLAGS "-Wl,--gc-sections -Wl,-u_AppColdStart -Wl,-u_AppWarmStart -march=ba2 -mcpu=jn51xx -mredzone-size=4 -mbranch-cost=3 -fomit-frame-pointer -fshort-enums -nostartfiles -Wl,--defsym=__stack_size=${STACK_SIZE} -Wl,--defsym,__minimum_heap_size=${MINIMUM_HEAP_SIZE}" CACHE INTERNAL "executable linker flags")
set(CMAKE_MODULE_LINKER_FLAGS "" CACHE INTERNAL "module linker flags")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE INTERNAL "shared linker flags")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

message(STATUS "")
message(STATUS "======================")
message(STATUS "Toolchain paths:")
message(STATUS "  TOOLCHAIN_BIN_DIR = ${TOOLCHAIN_BIN_DIR}")
message(STATUS "  TOOLCHAIN_INC_DIR = ${TOOLCHAIN_INC_DIR}")
message(STATUS "  TOOLCHAIN_LIB_DIR = ${TOOLCHAIN_LIB_DIR}")
message(STATUS "")
message(STATUS "  CMAKE_C_COMPILER = ${CMAKE_C_COMPILER}")
message(STATUS "  CMAKE_ASM_COMPILER = ${CMAKE_ASM_COMPILER}")
message(STATUS "  CMAKE_LINKER = ${CMAKE_LINKER}")
message(STATUS "  CMAKE_AR = ${CMAKE_AR}")
message(STATUS "  CMAKE_NM = ${CMAKE_NM}")
message(STATUS "  CMAKE_STRIP = ${CMAKE_STRIP}")
message(STATUS "  CMAKE_SIZE = ${CMAKE_SIZE}")
message(STATUS "  CMAKE_OBJCOPY = ${CMAKE_OBJCOPY}")
message(STATUS "  CMAKE_OBJDUMP = ${CMAKE_OBJDUMP}")
message(STATUS "  CMAKE_DEBUGER = ${CMAKE_DEBUGER}")
message(STATUS "======================")
message(STATUS "Compiler flags:")
message(STATUS "  CMAKE_C_FLAGS = ${CMAKE_C_FLAGS}")
message(STATUS "  CMAKE_ASM_FLAGS = ${CMAKE_ASM_FLAGS}")
message(STATUS "  CMAKE_EXE_LINKER_FLAGS = ${CMAKE_EXE_LINKER_FLAGS}")
message(STATUS "  CMAKE_MODULE_LINKER_FLAGS = ${CMAKE_MODULE_LINKER_FLAGS}")
message(STATUS "  CMAKE_SHARED_LINKER_FLAGS = ${CMAKE_SHARED_LINKER_FLAGS}")
message(STATUS "")
message(STATUS "  CMAKE_C_FLAGS_RELEASE = ${CMAKE_C_FLAGS_RELEASE}")
message(STATUS "  CMAKE_ASM_FLAGS_RELEASE = ${CMAKE_ASM_FLAGS_RELEASE}")
message(STATUS "  CMAKE_EXE_LINKER_FLAGS_RELEASE = ${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
message(STATUS "")
